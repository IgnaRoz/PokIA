accion BASE atacar(){
    Fase: normal; 
    Condiciones: 
        activo(pokemon,jugador);
        turno_actual(jugador);
        rival(rival,jugador);
        activo(pokemon_rival,rival);
    Consecuencias:
        DEL turno_actual(jugador);
        turno_actual(rival);
}

accion dar_energia(pokemon){
    Fase: normal; 
    Condiciones: 
        pokemon(pokemon);
        turno_actual(jugador);
        tipo_energia(energia,jugador);
        uso_energia(false);//habria que diferenciar de algun modo las variables de los individuos, quizas con un prefijo var? o con una seccion variables? mayusculas y minusculas?
        campo(pokemon,jugador);
    Consecuencias: 
        uso_energia(true);
        energia_pokemon(pokemon,energia,++);//incremento del valor actual
        energia_pokemon_normal(pokemon,++);//Se podria hacer una contingencia a energia_pokemon para sin condiciones para que siempre se ejecute energia_pokemon_normal
}
//Suponemos de momento que no hay coste de retirar
accion retirar_pokemon_activo(pokemon){
    Fase: normal; 
    Condiciones: 
        turno_actual(jugador);
        banco(pokemon,jugador);
        activo(pokemon_activo,jugador);
    Consecuencias: 
        activo(pokemon,jugador); //No hace falta DEL porque activo usa ONLY
        banco(pokemon_activo,jugador); 
        DEL banco(pokemon,jugador);
}

///////////  CONSECUENCIAS  /////////////////////////////////////////////////

consecuencia bajar_vida(pokemon,ataque){
    Consecuencias: 
        pokemon.vida = pokemon.vida - ataque; 
}

///////////  CONTINGENCIAS  /////////////////////////////////////////////////

//Se podria hacer una contingencia muerte_pokemon y luego hacer las Contingencias muerte_pokemon_activo y muerte_pokemon_banco como contingencias de una contingencia???

contingencia muerte_pokemon_activo: bajar_vida(pokemon,ataque){ 
    PostCondicion: 
        activo(pokemon,jugador); 
        pokemon.vida <= 0;
    PostConsecuencias: 
        DEL activo(pokemon,jugador);
        jugador_rival(rival).puntos++; // Se podria convertir en una consecuencia con condicion jugador_rival(rival) y consecuencia rivel.puntos++???Mejor tener jugador_rival(rival) en las condiciones y ya se puede usar la variable rival en las consecuencias
        turno_actual(jugador);
        fase(cambio_pokemon_activo);
        WAIT;
        turno_actual(rival);
}

contingencia muerte_pokemon_banco: bajar_vida(pokemon,ataque){
    PostCondicion: 
        banco(pokemon,jugador); 
        pokemon.vida <= 0;
    PostConsecuencias: 
        DEL banco(pokemon,jugador);
        jugador_rival(rival).puntos++;
}

contingencia muerte_sin_pokemon: muerte_pokemon_activo{
    PostCondicion: 
        banco_numero(0,jugador);
    PostConsecuencias: 
        fase(fin_partida);
}